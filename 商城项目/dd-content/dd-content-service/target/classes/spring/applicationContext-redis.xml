<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop.xsd 
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util.xsd">
    
    
    <!-- 加载数据库配置文件 -->
	<context:property-placeholder location="classpath:*.properties" />



    <!-- 连接redis单机版 -->
    <!-- 连接池配置 -->  
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
    <!-- 最大连接数 -->  
    <property name="maxTotal" value="150" />  
    <!-- 最大空闲连接数 -->  
    <property name="maxIdle" value="30" />  
    <!-- 最小空闲连接数 -->  
    <property name="minIdle" value="10" />  
    <!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->  
    <property name="maxWaitMillis" value="3000" />  
    <!-- 每次释放连接的最大数目 -->  
    <property name="numTestsPerEvictionRun" value="100" />  
    <!-- 释放连接的扫描间隔（毫秒） -->  
    <property name="timeBetweenEvictionRunsMillis" value="3000" />  
    <!-- 连接最小空闲时间 -->  
    <property name="minEvictableIdleTimeMillis" value="1800000" />  
    <!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->  
    <property name="softMinEvictableIdleTimeMillis" value="10000" />  
    <!-- 在获取连接的时候检查有效性, 默认false -->  
    <property name="testOnBorrow" value="true" />  
    <!-- 在空闲时检查有效性, 默认false -->  
    <property name="testWhileIdle" value="true" />  
    <!-- 在归还给pool时，是否提前进行validate操作 -->  
    <property name="testOnReturn" value="true" />  
    <!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->  
    <property name="blockWhenExhausted" value="false" />  
    </bean>  


 
 <!-- 
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="close">
        <constructor-arg name="poolConfig" ref="jedisPoolConfig" />
        <constructor-arg name="host" value="39.106.35.68"/>
        <constructor-arg name="port" value="6379"/>
        <constructor-arg name="timeout" value="3000"/>
        <constructor-arg name="password" value="kwininredis123"/>
    </bean>
    
    <bean id="jedisClientPool" class="com.cj.ttshop.utils.jedis.JedisClientPool">
        <property name="jedisPool" ref="jedisPool"></property>
    </bean> -->
        

<!--==============================================================================================================  -->
<!-- 如果使用集群版本，那么使用在下面的配置 -->
    <!-- 连接redis集群 -->
  <!--   <bean id="jedisCluster" class="redis.clients.jedis.JedisCluster">
        <constructor-arg name="nodes">
            <set>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="39.106.35.68"></constructor-arg>
                    <constructor-arg name="port" value="7001"></constructor-arg>
                </bean> 
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="39.106.35.68"></constructor-arg>
                    <constructor-arg name="port" value="7002"></constructor-arg>
                </bean> 
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="39.106.35.68"></constructor-arg>
                    <constructor-arg name="port" value="7003"></constructor-arg>
                </bean> 
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="39.106.35.68"></constructor-arg>
                    <constructor-arg name="port" value="7004"></constructor-arg>
                </bean> 
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="39.106.35.68"></constructor-arg>
                    <constructor-arg name="port" value="7005"></constructor-arg>
                </bean> 
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="39.106.35.68"></constructor-arg>
                    <constructor-arg name="port" value="7006"></constructor-arg>
                </bean> 
            </set>
        </constructor-arg>
    </bean> --> 
    
    
    <bean id="jedisCluster" class="redis.clients.jedis.JedisCluster">  
	<constructor-arg index="0">  
	<set>  
	<bean class="redis.clients.jedis.HostAndPort">  
		<constructor-arg index="0" value="${redis.host}"></constructor-arg>  
		<constructor-arg index="1" value="${redis.port1}"></constructor-arg>  
		</bean>  
	<bean class="redis.clients.jedis.HostAndPort">  
		<constructor-arg index="0" value="${redis.host}"></constructor-arg>  
		<constructor-arg index="1" value="${redis.port2}"></constructor-arg>  
	</bean>  
	<bean class="redis.clients.jedis.HostAndPort">  
		<constructor-arg index="0" value="${redis.host}"></constructor-arg>  
		<constructor-arg index="1" value="${redis.port3}"></constructor-arg>  
	</bean>  
	<bean class="redis.clients.jedis.HostAndPort">  
		<constructor-arg index="0" value="${redis.host}"></constructor-arg>  
		<constructor-arg index="1" value="${redis.port4}"></constructor-arg>  
	</bean>  
	<bean class="redis.clients.jedis.HostAndPort">  
		<constructor-arg index="0" value="${redis.host}"></constructor-arg>  
		<constructor-arg index="1" value="${redis.port5}"></constructor-arg>  
	</bean>  
	<bean class="redis.clients.jedis.HostAndPort">  
		<constructor-arg index="0" value="${redis.host}"></constructor-arg>  
		<constructor-arg index="1" value="${redis.port6}"></constructor-arg>  
	</bean>  
	</set>  
	</constructor-arg>  
		<constructor-arg index="1" value="${redis.timeout}"></constructor-arg>  
		<constructor-arg index="2" value="${redis.sockettimeout}"></constructor-arg>  
		<constructor-arg index="3" value="${redis.maxAttempts}"></constructor-arg>  
		<constructor-arg index="4" value="${redis.pass}"></constructor-arg>  
		<constructor-arg index="5" ref="jedisPoolConfig"></constructor-arg>  
	</bean>  
    <bean id="jedisClientCluster" class="com.cj.ttshop.utils.jedis.JedisClientCluster">
        <property name="jedisCluster" ref="jedisCluster"/>
    </bean> 
 </beans>   
   